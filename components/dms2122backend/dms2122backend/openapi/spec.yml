openapi: 3.0.0
info:
  title: DMS backend service REST API
  version: '1.0'
  description: |
    REST API for the backen service.

    This is part of the mandatory exercise.

    Diseño y Mantenimiento del Software. Grado en Ingeniería Informática, Universidad de Burgos, 2021-2022.
  contact:
    name: Universidad de Burgos
tags:
  - name: questions
    description: Question-related operations
  - name: answers
    description: Answer-related operations
  - name: server
    description: Operations about the server itself (e.g., server status querying)
servers:
  - url: /api/v1
paths:
  '/':
    head:
      summary: Health test for the service
      operationId: dms2122backend.presentation.rest.server.health_test
      responses:
        '204':
          description: Success response (will not redirect)
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - server
  /questions:
    get:
      summary: Gets a listing of questions.
      operationId: dms2122backend.presentation.rest.question.list_questions
      responses:
        '200':
          description: A list of questions.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionsFullListModel'
      tags:
        - questions
      security:
        - api_key: []
  /questions/add:
    post:
      summary: Creates a new question.
      operationId: dms2122backend.presentation.rest.question.create_question
      requestBody:
        description: New questions's data.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/QuestionFullModel'
      responses:
        '200':
          description: Data of the newly created question.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionFullIdModel'
        '400':
          description: Errors in the request.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
        '409':
          description: There is a conflict with some of the user's unique data.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
      security:
        - api_key: []
  /questions/{id}/edit:
    put:
      summary: Edits an existing question.
      operationId: dms2122backend.presentation.rest.question.edit_question
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Edited questions's data.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/QuestionFullIdModel'
      responses:
        '200':
          description: Data of the edited question.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionFullIdModel'
        '400':
          description: Errors in the request.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
        '404':
          description: The question does not exist.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
      security:
        - user_token: []
          api_key: []
  /questions/{id}/preview:
    get:
      summary: Show a preview for the selected question.
      operationId: dms2122backend.presentation.rest.question.get_question_id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The given question exists and it's previewed.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionFullIdModel'
        '400':
          description: Errors in the request.
          content:
            'text/plain':
              schema:
                type: string
        '404':
          description: The given question does not exist.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
      security:
      - user_token: []
        api_key: []
  /questions/{id}/answer/{username}:
    post:
      summary: Answers a question.
      operationId: dms2122backend.presentation.rest.answer.create_answer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: username
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Answer's data.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/AnswerFullModel'
      responses:
        '200':
          description: The question has been answered.
          content:
            'text/plain':
              schema:
                type: string
        '400':
          description: Errors in the request.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
        '404':
          description: The question does not exist.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
        - answers
      security:
        - user_token: []
          api_key: []
  /questions/{id}/answers:
    get:
      summary: Gets all the answers to a question.
      operationId: dms2122backend.presentation.rest.answer.list_answers_by_question
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: All the answers to a question.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AnswersFullListModel'
        '400':
          description: Errors in the request.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
        '404':
          description: The question doesn't exist.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
        - answers
      security:
        - user_token: []
          api_key: []
  /questions/{username}/answers:
    get:
      summary: Gets all the answers from an user.
      operationId: dms2122backend.presentation.rest.answer.list_answers_by_user
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: All the answers from an user.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AnswersFullListModel'
        '400':
          description: Errors in the request.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
        '404':
          description: The user doesn't exist.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
        - answers
      security:
        - user_token: []
          api_key: []
  /questions/{id}/answer:
    get:
      summary: Gets the answer to a question.
      operationId: dms2122backend.presentation.rest.answer.get_answer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The answer of the question.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AnswerFullModel'
        '400':
          description: Errors in the request.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
        '404':
          description: The question doesn't exist.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
        - answers
      security:
        - user_token: []
          api_key: []      
components:
  schemas:
    QuestionFullModel:
      type: object
      properties:
        question:
          type: string
        description:
          type: string
        option1:
          type: string
        option2:
          type: string
        true_answer:
          type: string
        correct_question_percentage:
          type: number
        incorrect_question_percentage:
          type: number
      required:
        - question
        - description
        - option1
        - option2
        - true_answer
        - correct_question_percentage
        - incorrect_question_percentage
    QuestionFullIdModel:
      type: object
      properties:
        id:
          type: integer
        question:
          type: string
        description:
          type: string
        option1:
          type: string
        option2:
          type: string
        true_answer:
          type: string
        correct_question_percentage:
          type: number
        incorrect_question_percentage:
          type: number
      required:
        - id
        - question
        - description
        - option1
        - option2
        - true_answer
        - correct_question_percentage
        - incorrect_question_percentage
    QuestionsFullListModel:
      type: array
      items:
        $ref: '#/components/schemas/QuestionFullIdModel'
    AnswerFullModel:
      type: object
      properties:
        user:
          type: string
        answer:
          type: string
        question_id:
          type: integer
      required:
        - user
        - answer
        - question_id
    AnswersFullListModel:
      type: array
      items:
        $ref: '#/components/schemas/AnswerFullModel'
  securitySchemes:
    user_token:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: dms2122backend.presentation.rest.security.verify_token
    api_key:
      type: apiKey
      name: X-ApiKey-Auth
      in: header
      x-apikeyInfoFunc: dms2122backend.presentation.rest.security.verify_api_key