openapi: 3.0.0
info:
  title: DMS backend service REST API
  version: '1.0'
  description: |
    REST API for the backen service.

    This is part of the mandatory exercise.

    Diseño y Mantenimiento del Software. Grado en Ingeniería Informática, Universidad de Burgos, 2021-2022.
  contact:
    name: Universidad de Burgos
tags:
  - name: questions
    description: Question-related operations
  - name: answer
    description: Answer-related operations
  - name: server
    description: Operations about the server itself (e.g., server status querying)
servers:
  - url: /api/v1
paths:
  '/':
    head:
      summary: Health test for the service
      operationId: dms2122backend.presentation.rest.server.health_test
      responses:
        '204':
          description: Success response (will not redirect)
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - server
  /questions:
    get:
      summary: Gets a listing of questions.
      operationId: dms2122backend.presentation.rest.question.list_questions
      responses:
        '200':
          description: A list of questions.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionsFullListModel'
      tags:
        - questions
      security:
        - api_key: []
  /questions/add:
    post:
      summary: Creates a new question.
      operationId: dms2122backend.presentation.rest.question.create_question
      requestBody:
        description: New questions's data.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/QuestionFullModel'
      responses:
        '200':
          description: Data of the newly created question.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionFullModel'
        '400':
          description: Errors in the request.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
        '409':
          description: There is a conflict with some of the user's unique data.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
      security:
        - api_key: []
  /questions/edit:
    post:
      summary: Edits a new question.
      operationId: dms2122backend.presentation.rest.question.edit_question
      requestBody:
        description: Edited questions's data.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/QuestionFullModel'
      responses:
        '200':
          description: Data of the newly created question.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionFullModel'
        '400':
          description: Errors in the request.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
        '409':
          description: There is a conflict with some of the user's unique data.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
      security:
        - api_key: []
  /questions/preview/{id}:
    get:
      summary: Show a preview for a selected question.
      operationId: dms2122backend.presentation.rest.question.get_question_id
      requestBody:
        description: Questions preview
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/QuestionWithAnswerFullModel'
      responses:
        '200':
          description: The given question has the given answer
          content:
            'text/plain':
              schema:
                type: string
        '404':
          description: The given question does not have the given answer, or either the question or the answer does not exist.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
      security:
      - api_key: []
  /student/questions/answer:
    post:
      summary: Answer the list of questions.
      operationId: dms2122backend.presentation.rest.question.answer_questions
      requestBody:
        description: New questions's data.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/QuestionFullModel'
      responses:
        '200':
          description: Data of the newly created question.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionFullModel'
        '400':
          description: Errors in the request.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
        '409':
          description: There is a conflict with some of the questions's unique data.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
      security:
        - api_key: []
components:
  schemas:
    QuestionFullModel:
      type: object
      properties:
        question:
          type: string
      required:
        - question
    AnswerFullModel:
      type: object
      properties:
        answer:
          type: string
      required:
        - answer
    QuestionWithAnswerFullModel:
      type: array
      items:
        type: array
        properties:
          question:
            type: string
          answer:
            type: string
        required:
          - question
          - answer
    QuestionsFullListModel:
      type: array
      items:
        $ref: '#/components/schemas/QuestionWithAnswerFullModel'
  securitySchemes:
    user_credentials:
      type: http
      scheme: basic
      x-basicInfoFunc: dms2122backend.presentation.rest.security.verify_credentials
    user_token:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: dms2122backend.presentation.rest.security.verify_token
    api_key:
      type: apiKey
      name: X-ApiKey-Auth
      in: header
      x-apikeyInfoFunc: dms2122backend.presentation.rest.security.verify_api_key
